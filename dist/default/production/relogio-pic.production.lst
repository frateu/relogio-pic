

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 23 22:59:22 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172                           
   173                           	psect	idataBANK0
   174     0599                     __pidataBANK0:
   175                           
   176                           ;initializer for relogio_click@F1019
   177     0599  343F               	retlw	63
   178     059A  3400               	retlw	0
   179     059B  3406               	retlw	6
   180     059C  3400               	retlw	0
   181     059D  345B               	retlw	91
   182     059E  3400               	retlw	0
   183     059F  344F               	retlw	79
   184     05A0  3400               	retlw	0
   185     05A1  3466               	retlw	102
   186     05A2  3400               	retlw	0
   187     05A3  346D               	retlw	109
   188     05A4  3400               	retlw	0
   189     05A5  347D               	retlw	125
   190     05A6  3400               	retlw	0
   191     05A7  3407               	retlw	7
   192     05A8  3400               	retlw	0
   193     05A9  347F               	retlw	127
   194     05AA  3400               	retlw	0
   195     05AB  3467               	retlw	103
   196     05AC  3400               	retlw	0
   197     0008                     _PORTD	set	8
   198     0007                     _PORTC	set	7
   199     0088                     _TRISD	set	136
   200     0087                     _TRISC	set	135
   201                           
   202                           	psect	cinit
   203     07E8                     start_initialization:	
   204                           ; #config settings
   205                           
   206     07E8                     __initialization:
   207                           
   208                           ; Initialize objects allocated to BANK0
   209     07E8  1383               	bcf	3,7	;select IRP bank0
   210     07E9  305A               	movlw	low (__pdataBANK0+20)
   211     07EA  00FD               	movwf	btemp+-1
   212     07EB  3005               	movlw	high __pidataBANK0
   213     07EC  00FE               	movwf	btemp
   214     07ED  3099               	movlw	low __pidataBANK0
   215     07EE  00FF               	movwf	btemp+1
   216     07EF  3046               	movlw	low __pdataBANK0
   217     07F0  0084               	movwf	4
   218     07F1  120A  118A  258A  120A  118A  	fcall	init_ram0
   219                           
   220                           ; Clear objects allocated to BANK0
   221     07F6  01DA               	clrf	__pbssBANK0& (0+127)
   222     07F7  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   223     07F8  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   224     07F9  01DD               	clrf	(__pbssBANK0+3)& (0+127)
   225     07FA  01DE               	clrf	(__pbssBANK0+4)& (0+127)
   226     07FB  01DF               	clrf	(__pbssBANK0+5)& (0+127)
   227     07FC                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230     07FC                     __end_of__initialization:
   231     07FC  0183               	clrf	3
   232     07FD  120A  118A  2E2B   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssBANK0
   235     005A                     __pbssBANK0:
   236     005A                     _hora:
   237     005A                     	ds	2
   238     005C                     _mint:
   239     005C                     	ds	2
   240     005E                     _segd:
   241     005E                     	ds	2
   242                           
   243                           	psect	dataBANK0
   244     0046                     __pdataBANK0:
   245     0046                     relogio_click@F1019:
   246     0046                     	ds	20
   247                           
   248                           	psect	inittext
   249     0586                     init_fetch0:	
   250                           ;	Called with low address in FSR and high address in W
   251                           
   252     0586  087E               	movf	btemp,w
   253     0587  008A               	movwf	10
   254     0588  087F               	movf	btemp+1,w
   255     0589  0082               	movwf	2
   256     058A                     init_ram0:	
   257                           ;Called with:
   258                           ;	high address of idata address in btemp 
   259                           ;	low address of idata address in btemp+1 
   260                           ;	low address of data in FSR
   261                           ;	high address + 1 of data in btemp-1
   262                           
   263     058A  120A  118A  2586  120A  118A  	fcall	init_fetch0
   264     058F  0080               	movwf	0
   265     0590  0A84               	incf	4,f
   266     0591  0804               	movf	4,w
   267     0592  067D               	xorwf	btemp+-1,w
   268     0593  1903               	btfsc	3,2
   269     0594  3400               	retlw	0
   270     0595  0AFF               	incf	btemp+1,f
   271     0596  1903               	btfsc	3,2
   272     0597  0AFE               	incf	btemp,f
   273     0598  2D8A               	goto	init_ram0
   274                           
   275                           	psect	cstackCOMMON
   276     0070                     __pcstackCOMMON:
   277     0070                     ?_relogio_click:
   278     0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ?___lwdiv:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ?___lwmod:	
   285                           ; 2 bytes @ 0x0
   286                           
   287     0070                     ___lwdiv@divisor:	
   288                           ; 2 bytes @ 0x0
   289                           
   290     0070                     ___lwmod@divisor:	
   291                           ; 2 bytes @ 0x0
   292                           
   293                           
   294                           ; 2 bytes @ 0x0
   295     0070                     	ds	2
   296     0072                     ___lwdiv@dividend:
   297     0072                     ___lwmod@dividend:	
   298                           ; 2 bytes @ 0x2
   299                           
   300                           
   301                           ; 2 bytes @ 0x2
   302     0072                     	ds	2
   303     0074                     ??___lwdiv:
   304     0074                     ??___lwmod:	
   305                           ; 1 bytes @ 0x4
   306                           
   307     0074                     ___lwmod@counter:	
   308                           ; 1 bytes @ 0x4
   309                           
   310     0074                     ___lwdiv@quotient:	
   311                           ; 1 bytes @ 0x4
   312                           
   313                           
   314                           ; 2 bytes @ 0x4
   315     0074                     	ds	2
   316     0076                     ___lwdiv@counter:
   317                           
   318                           ; 1 bytes @ 0x6
   319     0076                     	ds	1
   320     0077                     ??_relogio_click:
   321                           
   322                           ; 1 bytes @ 0x7
   323     0077                     	ds	4
   324     007B                     ??_main:
   325     007B                     main@flag:	
   326                           ; 1 bytes @ 0xB
   327                           
   328                           
   329                           ; 2 bytes @ 0xB
   330     007B                     	ds	2
   331                           
   332                           	psect	cstackBANK0
   333     0020                     __pcstackBANK0:
   334     0020                     relogio_click@segmento:
   335                           
   336                           ; 20 bytes @ 0x0
   337     0020                     	ds	20
   338     0034                     relogio_click@segdU:
   339                           
   340                           ; 2 bytes @ 0x14
   341     0034                     	ds	2
   342     0036                     relogio_click@segdUA:
   343                           
   344                           ; 2 bytes @ 0x16
   345     0036                     	ds	2
   346     0038                     relogio_click@segdD:
   347                           
   348                           ; 2 bytes @ 0x18
   349     0038                     	ds	2
   350     003A                     relogio_click@mintU:
   351                           
   352                           ; 2 bytes @ 0x1A
   353     003A                     	ds	2
   354     003C                     relogio_click@mintUA:
   355                           
   356                           ; 2 bytes @ 0x1C
   357     003C                     	ds	2
   358     003E                     relogio_click@mintD:
   359                           
   360                           ; 2 bytes @ 0x1E
   361     003E                     	ds	2
   362     0040                     relogio_click@horaU:
   363                           
   364                           ; 2 bytes @ 0x20
   365     0040                     	ds	2
   366     0042                     relogio_click@horaUA:
   367                           
   368                           ; 2 bytes @ 0x22
   369     0042                     	ds	2
   370     0044                     relogio_click@horaD:
   371                           
   372                           ; 2 bytes @ 0x24
   373     0044                     	ds	2
   374                           
   375                           	psect	maintext
   376     062B                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 74 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  flag            2   11[COMMON] int 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         2       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0
   399 ;;      Totals:         2       0       0       0       0
   400 ;;Total ram usage:        2 bytes
   401 ;; Hardware stack levels required when called: 2
   402 ;; This function calls:
   403 ;;		_relogio_click
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409     062B                     _main:	
   410                           ;psect for function _main
   411                           
   412     062B                     l953:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   415                           
   416                           
   417                           ;main.c: 76:     int flag = 0;
   418     062B  01FB               	clrf	main@flag
   419     062C  01FC               	clrf	main@flag+1
   420     062D                     l955:
   421                           
   422                           ;main.c: 79:     {;main.c: 80:         relogio_click();
   423     062D  120A  118A  2681  120A  118A  	fcall	_relogio_click
   424     0632                     l957:
   425                           
   426                           ;main.c: 82:         if (flag>=33)
   427     0632  087C               	movf	main@flag+1,w
   428     0633  3A80               	xorlw	128
   429     0634  00FF               	movwf	btemp+1
   430     0635  3080               	movlw	128
   431     0636  027F               	subwf	btemp+1,w
   432     0637  1D03               	skipz
   433     0638  2E3B               	goto	u285
   434     0639  3021               	movlw	33
   435     063A  027B               	subwf	main@flag,w
   436     063B                     u285:
   437     063B  1C03               	skipc
   438     063C  2E3E               	goto	u281
   439     063D  2E3F               	goto	u280
   440     063E                     u281:
   441     063E  2E77               	goto	l979
   442     063F                     u280:
   443     063F                     l959:
   444                           
   445                           ;main.c: 83:         {;main.c: 84:             segd++;
   446     063F  3001               	movlw	1
   447     0640  1283               	bcf	3,5	;RP0=0, select bank0
   448     0641  1303               	bcf	3,6	;RP1=0, select bank0
   449     0642  07DE               	addwf	_segd,f
   450     0643  1803               	skipnc
   451     0644  0ADF               	incf	_segd+1,f
   452     0645  3000               	movlw	0
   453     0646  07DF               	addwf	_segd+1,f
   454     0647                     l961:
   455                           
   456                           ;main.c: 85:             flag=0;
   457     0647  01FB               	clrf	main@flag
   458     0648  01FC               	clrf	main@flag+1
   459     0649                     l963:
   460                           
   461                           ;main.c: 87:             if (segd >= 60)
   462     0649  3000               	movlw	0
   463     064A  025F               	subwf	_segd+1,w
   464     064B  303C               	movlw	60
   465     064C  1903               	skipnz
   466     064D  025E               	subwf	_segd,w
   467     064E  1C03               	skipc
   468     064F  2E51               	goto	u291
   469     0650  2E52               	goto	u290
   470     0651                     u291:
   471     0651  2E77               	goto	l979
   472     0652                     u290:
   473     0652                     l965:
   474                           
   475                           ;main.c: 88:             {;main.c: 89:                 mint++;
   476     0652  3001               	movlw	1
   477     0653  07DC               	addwf	_mint,f
   478     0654  1803               	skipnc
   479     0655  0ADD               	incf	_mint+1,f
   480     0656  3000               	movlw	0
   481     0657  07DD               	addwf	_mint+1,f
   482     0658                     l967:
   483                           
   484                           ;main.c: 90:                 segd = 0;
   485     0658  01DE               	clrf	_segd
   486     0659  01DF               	clrf	_segd+1
   487     065A                     l969:
   488                           
   489                           ;main.c: 92:                 if (mint >= 60)
   490     065A  3000               	movlw	0
   491     065B  025D               	subwf	_mint+1,w
   492     065C  303C               	movlw	60
   493     065D  1903               	skipnz
   494     065E  025C               	subwf	_mint,w
   495     065F  1C03               	skipc
   496     0660  2E62               	goto	u301
   497     0661  2E63               	goto	u300
   498     0662                     u301:
   499     0662  2E77               	goto	l979
   500     0663                     u300:
   501     0663                     l971:
   502                           
   503                           ;main.c: 93:                 {;main.c: 94:                     hora++;
   504     0663  3001               	movlw	1
   505     0664  07DA               	addwf	_hora,f
   506     0665  1803               	skipnc
   507     0666  0ADB               	incf	_hora+1,f
   508     0667  3000               	movlw	0
   509     0668  07DB               	addwf	_hora+1,f
   510     0669                     l973:
   511                           
   512                           ;main.c: 95:                     mint = 0;
   513     0669  01DC               	clrf	_mint
   514     066A  01DD               	clrf	_mint+1
   515     066B                     l975:
   516                           
   517                           ;main.c: 97:                     if (hora >= 24)
   518     066B  3000               	movlw	0
   519     066C  025B               	subwf	_hora+1,w
   520     066D  3018               	movlw	24
   521     066E  1903               	skipnz
   522     066F  025A               	subwf	_hora,w
   523     0670  1C03               	skipc
   524     0671  2E73               	goto	u311
   525     0672  2E74               	goto	u310
   526     0673                     u311:
   527     0673  2E77               	goto	l28
   528     0674                     u310:
   529     0674                     l977:
   530                           
   531                           ;main.c: 98:                     {;main.c: 99:                         hora = 0;
   532     0674  01DA               	clrf	_hora
   533     0675  01DB               	clrf	_hora+1
   534     0676  2E77               	goto	l979
   535     0677                     l28:	
   536                           ;main.c: 102:             }
   537                           
   538     0677                     l979:
   539                           
   540                           ;main.c: 105:         flag++;
   541     0677  3001               	movlw	1
   542     0678  07FB               	addwf	main@flag,f
   543     0679  1803               	skipnc
   544     067A  0AFC               	incf	main@flag+1,f
   545     067B  3000               	movlw	0
   546     067C  07FC               	addwf	main@flag+1,f
   547     067D  2E2D               	goto	l955
   548     067E  120A  118A  2800   	ljmp	start
   549     0681                     __end_of_main:
   550                           
   551                           	psect	text1
   552     0681                     __ptext1:	
   553 ;; *************** function _relogio_click *****************
   554 ;; Defined at:
   555 ;;		line 11 in file "main.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  segmento       20    0[BANK0 ] unsigned int [10]
   560 ;;  horaD           2   36[BANK0 ] unsigned int 
   561 ;;  horaUA          2   34[BANK0 ] unsigned int 
   562 ;;  horaU           2   32[BANK0 ] unsigned int 
   563 ;;  mintD           2   30[BANK0 ] unsigned int 
   564 ;;  mintUA          2   28[BANK0 ] unsigned int 
   565 ;;  mintU           2   26[BANK0 ] unsigned int 
   566 ;;  segdD           2   24[BANK0 ] unsigned int 
   567 ;;  segdUA          2   22[BANK0 ] unsigned int 
   568 ;;  segdU           2   20[BANK0 ] unsigned int 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0      38       0       0       0
   580 ;;      Temps:          4       0       0       0       0
   581 ;;      Totals:         4      38       0       0       0
   582 ;;Total ram usage:       42 bytes
   583 ;; Hardware stack levels used: 1
   584 ;; Hardware stack levels required when called: 1
   585 ;; This function calls:
   586 ;;		___lwdiv
   587 ;;		___lwmod
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593     0681                     _relogio_click:	
   594                           ;psect for function _relogio_click
   595                           
   596     0681                     l869:	
   597                           ;incstack = 0
   598                           ; Regs used in _relogio_click: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   599                           
   600                           
   601                           ;main.c: 17:     unsigned int segdU, segdUA, segdD, mintU, mintUA, mintD, horaU, horaUA,
      +                           horaD;;main.c: 19:     unsigned int segmento[]={0X3F,
   602     0681  3020               	movlw	relogio_click@segmento& (0+255)
   603     0682  0084               	movwf	4
   604     0683  3046               	movlw	low relogio_click@F1019
   605     0684  00F7               	movwf	??_relogio_click
   606     0685  0804               	movf	4,w
   607     0686  00F8               	movwf	??_relogio_click+1
   608     0687  3014               	movlw	20
   609     0688  00F9               	movwf	??_relogio_click+2
   610     0689                     u270:
   611     0689  0877               	movf	??_relogio_click,w
   612     068A  0084               	movwf	4
   613     068B  1383               	bcf	3,7	;select IRP bank0
   614     068C  0800               	movf	0,w
   615     068D  00FA               	movwf	??_relogio_click+3
   616     068E  0AF7               	incf	??_relogio_click,f
   617     068F  0878               	movf	??_relogio_click+1,w
   618     0690  0084               	movwf	4
   619     0691  087A               	movf	??_relogio_click+3,w
   620     0692  0080               	movwf	0
   621     0693  0AF8               	incf	??_relogio_click+1,f
   622     0694  0BF9               	decfsz	??_relogio_click+2,f
   623     0695  2E89               	goto	u270
   624     0696                     l871:
   625                           
   626                           ;main.c: 32:     TRISC=0X00;
   627     0696  1683               	bsf	3,5	;RP0=1, select bank1
   628     0697  1303               	bcf	3,6	;RP1=0, select bank1
   629     0698  0187               	clrf	7	;volatile
   630     0699                     l873:
   631                           
   632                           ;main.c: 33:     PORTC=0X00;
   633     0699  1283               	bcf	3,5	;RP0=0, select bank0
   634     069A  1303               	bcf	3,6	;RP1=0, select bank0
   635     069B  0187               	clrf	7	;volatile
   636     069C                     l875:
   637                           
   638                           ;main.c: 34:     TRISD=0x00;
   639     069C  1683               	bsf	3,5	;RP0=1, select bank1
   640     069D  1303               	bcf	3,6	;RP1=0, select bank1
   641     069E  0188               	clrf	8	;volatile
   642     069F                     l877:
   643                           
   644                           ;main.c: 35:     PORTD=0X00;
   645     069F  1283               	bcf	3,5	;RP0=0, select bank0
   646     06A0  1303               	bcf	3,6	;RP1=0, select bank0
   647     06A1  0188               	clrf	8	;volatile
   648     06A2                     l879:
   649                           
   650                           ;main.c: 38:     segdU = segd % 10;
   651     06A2  300A               	movlw	10
   652     06A3  00F0               	movwf	___lwmod@divisor
   653     06A4  3000               	movlw	0
   654     06A5  00F1               	movwf	___lwmod@divisor+1
   655     06A6  085F               	movf	_segd+1,w
   656     06A7  00F3               	movwf	___lwmod@dividend+1
   657     06A8  085E               	movf	_segd,w
   658     06A9  00F2               	movwf	___lwmod@dividend
   659     06AA  120A  118A  25AD  120A  118A  	fcall	___lwmod
   660     06AF  0871               	movf	?___lwmod+1,w
   661     06B0  1283               	bcf	3,5	;RP0=0, select bank0
   662     06B1  1303               	bcf	3,6	;RP1=0, select bank0
   663     06B2  00B5               	movwf	relogio_click@segdU+1
   664     06B3  0870               	movf	?___lwmod,w
   665     06B4  00B4               	movwf	relogio_click@segdU
   666     06B5                     l881:
   667                           
   668                           ;main.c: 39:     segdUA = segd / 10;
   669     06B5  300A               	movlw	10
   670     06B6  00F0               	movwf	___lwdiv@divisor
   671     06B7  3000               	movlw	0
   672     06B8  00F1               	movwf	___lwdiv@divisor+1
   673     06B9  085F               	movf	_segd+1,w
   674     06BA  00F3               	movwf	___lwdiv@dividend+1
   675     06BB  085E               	movf	_segd,w
   676     06BC  00F2               	movwf	___lwdiv@dividend
   677     06BD  120A  118A  25E7  120A  118A  	fcall	___lwdiv
   678     06C2  0871               	movf	?___lwdiv+1,w
   679     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   680     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   681     06C5  00B7               	movwf	relogio_click@segdUA+1
   682     06C6  0870               	movf	?___lwdiv,w
   683     06C7  00B6               	movwf	relogio_click@segdUA
   684     06C8                     l883:
   685                           
   686                           ;main.c: 41:     segdD = segdUA % 10;
   687     06C8  300A               	movlw	10
   688     06C9  00F0               	movwf	___lwmod@divisor
   689     06CA  3000               	movlw	0
   690     06CB  00F1               	movwf	___lwmod@divisor+1
   691     06CC  0837               	movf	relogio_click@segdUA+1,w
   692     06CD  00F3               	movwf	___lwmod@dividend+1
   693     06CE  0836               	movf	relogio_click@segdUA,w
   694     06CF  00F2               	movwf	___lwmod@dividend
   695     06D0  120A  118A  25AD  120A  118A  	fcall	___lwmod
   696     06D5  0871               	movf	?___lwmod+1,w
   697     06D6  1283               	bcf	3,5	;RP0=0, select bank0
   698     06D7  1303               	bcf	3,6	;RP1=0, select bank0
   699     06D8  00B9               	movwf	relogio_click@segdD+1
   700     06D9  0870               	movf	?___lwmod,w
   701     06DA  00B8               	movwf	relogio_click@segdD
   702     06DB                     l885:
   703                           
   704                           ;main.c: 44:     mintU = mint % 10;
   705     06DB  300A               	movlw	10
   706     06DC  00F0               	movwf	___lwmod@divisor
   707     06DD  3000               	movlw	0
   708     06DE  00F1               	movwf	___lwmod@divisor+1
   709     06DF  085D               	movf	_mint+1,w
   710     06E0  00F3               	movwf	___lwmod@dividend+1
   711     06E1  085C               	movf	_mint,w
   712     06E2  00F2               	movwf	___lwmod@dividend
   713     06E3  120A  118A  25AD  120A  118A  	fcall	___lwmod
   714     06E8  0871               	movf	?___lwmod+1,w
   715     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   716     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   717     06EB  00BB               	movwf	relogio_click@mintU+1
   718     06EC  0870               	movf	?___lwmod,w
   719     06ED  00BA               	movwf	relogio_click@mintU
   720     06EE                     l887:
   721                           
   722                           ;main.c: 45:     mintUA = mint / 10;
   723     06EE  300A               	movlw	10
   724     06EF  00F0               	movwf	___lwdiv@divisor
   725     06F0  3000               	movlw	0
   726     06F1  00F1               	movwf	___lwdiv@divisor+1
   727     06F2  085D               	movf	_mint+1,w
   728     06F3  00F3               	movwf	___lwdiv@dividend+1
   729     06F4  085C               	movf	_mint,w
   730     06F5  00F2               	movwf	___lwdiv@dividend
   731     06F6  120A  118A  25E7  120A  118A  	fcall	___lwdiv
   732     06FB  0871               	movf	?___lwdiv+1,w
   733     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   734     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   735     06FE  00BD               	movwf	relogio_click@mintUA+1
   736     06FF  0870               	movf	?___lwdiv,w
   737     0700  00BC               	movwf	relogio_click@mintUA
   738     0701                     l889:
   739                           
   740                           ;main.c: 47:     mintD = mintUA % 10;
   741     0701  300A               	movlw	10
   742     0702  00F0               	movwf	___lwmod@divisor
   743     0703  3000               	movlw	0
   744     0704  00F1               	movwf	___lwmod@divisor+1
   745     0705  083D               	movf	relogio_click@mintUA+1,w
   746     0706  00F3               	movwf	___lwmod@dividend+1
   747     0707  083C               	movf	relogio_click@mintUA,w
   748     0708  00F2               	movwf	___lwmod@dividend
   749     0709  120A  118A  25AD  120A  118A  	fcall	___lwmod
   750     070E  0871               	movf	?___lwmod+1,w
   751     070F  1283               	bcf	3,5	;RP0=0, select bank0
   752     0710  1303               	bcf	3,6	;RP1=0, select bank0
   753     0711  00BF               	movwf	relogio_click@mintD+1
   754     0712  0870               	movf	?___lwmod,w
   755     0713  00BE               	movwf	relogio_click@mintD
   756     0714                     l891:
   757                           
   758                           ;main.c: 50:     horaU = hora % 10;
   759     0714  300A               	movlw	10
   760     0715  00F0               	movwf	___lwmod@divisor
   761     0716  3000               	movlw	0
   762     0717  00F1               	movwf	___lwmod@divisor+1
   763     0718  085B               	movf	_hora+1,w
   764     0719  00F3               	movwf	___lwmod@dividend+1
   765     071A  085A               	movf	_hora,w
   766     071B  00F2               	movwf	___lwmod@dividend
   767     071C  120A  118A  25AD  120A  118A  	fcall	___lwmod
   768     0721  0871               	movf	?___lwmod+1,w
   769     0722  1283               	bcf	3,5	;RP0=0, select bank0
   770     0723  1303               	bcf	3,6	;RP1=0, select bank0
   771     0724  00C1               	movwf	relogio_click@horaU+1
   772     0725  0870               	movf	?___lwmod,w
   773     0726  00C0               	movwf	relogio_click@horaU
   774     0727                     l893:
   775                           
   776                           ;main.c: 51:     horaUA = hora / 10;
   777     0727  300A               	movlw	10
   778     0728  00F0               	movwf	___lwdiv@divisor
   779     0729  3000               	movlw	0
   780     072A  00F1               	movwf	___lwdiv@divisor+1
   781     072B  085B               	movf	_hora+1,w
   782     072C  00F3               	movwf	___lwdiv@dividend+1
   783     072D  085A               	movf	_hora,w
   784     072E  00F2               	movwf	___lwdiv@dividend
   785     072F  120A  118A  25E7  120A  118A  	fcall	___lwdiv
   786     0734  0871               	movf	?___lwdiv+1,w
   787     0735  1283               	bcf	3,5	;RP0=0, select bank0
   788     0736  1303               	bcf	3,6	;RP1=0, select bank0
   789     0737  00C3               	movwf	relogio_click@horaUA+1
   790     0738  0870               	movf	?___lwdiv,w
   791     0739  00C2               	movwf	relogio_click@horaUA
   792     073A                     l895:
   793                           
   794                           ;main.c: 53:     horaD = horaUA % 10;
   795     073A  300A               	movlw	10
   796     073B  00F0               	movwf	___lwmod@divisor
   797     073C  3000               	movlw	0
   798     073D  00F1               	movwf	___lwmod@divisor+1
   799     073E  0843               	movf	relogio_click@horaUA+1,w
   800     073F  00F3               	movwf	___lwmod@dividend+1
   801     0740  0842               	movf	relogio_click@horaUA,w
   802     0741  00F2               	movwf	___lwmod@dividend
   803     0742  120A  118A  25AD  120A  118A  	fcall	___lwmod
   804     0747  0871               	movf	?___lwmod+1,w
   805     0748  1283               	bcf	3,5	;RP0=0, select bank0
   806     0749  1303               	bcf	3,6	;RP1=0, select bank0
   807     074A  00C5               	movwf	relogio_click@horaD+1
   808     074B  0870               	movf	?___lwmod,w
   809     074C  00C4               	movwf	relogio_click@horaD
   810     074D                     l897:
   811                           
   812                           ;main.c: 56:     PORTD=segmento[horaD]; ((PORTC) |= (1 << (0))); _delay((unsigned long)(
      +                          (5)*(20000000/4000.0))); ((PORTC) &= ~(1 << (0)));
   813     074D  0844               	movf	relogio_click@horaD,w
   814     074E  00F7               	movwf	??_relogio_click
   815     074F  0777               	addwf	??_relogio_click,w
   816     0750  3E20               	addlw	(low (relogio_click@segmento| 0))& (0+255)
   817     0751  0084               	movwf	4
   818     0752  1383               	bcf	3,7	;select IRP bank0
   819     0753  0800               	movf	0,w
   820     0754  0088               	movwf	8	;volatile
   821     0755                     l899:
   822     0755  1407               	bsf	7,0	;volatile
   823     0756                     l901:
   824     0756  3021               	movlw	33
   825     0757  00F8               	movwf	??_relogio_click+1
   826     0758  3076               	movlw	118
   827     0759  00F7               	movwf	??_relogio_click
   828     075A                     u327:
   829     075A  0BF7               	decfsz	??_relogio_click,f
   830     075B  2F5A               	goto	u327
   831     075C  0BF8               	decfsz	??_relogio_click+1,f
   832     075D  2F5A               	goto	u327
   833     075E  0000               	nop
   834     075F                     l903:
   835     075F  30FE               	movlw	254
   836     0760  00FF               	movwf	btemp+1
   837     0761  087F               	movf	btemp+1,w
   838     0762  1283               	bcf	3,5	;RP0=0, select bank0
   839     0763  1303               	bcf	3,6	;RP1=0, select bank0
   840     0764  0587               	andwf	7,f	;volatile
   841     0765                     l905:
   842                           
   843                           ;main.c: 59:     PORTD=segmento[horaU]; ((PORTC) |= (1 << (1))); ((PORTD) |= (1 << (7)))
      +                          ; _delay((unsigned long)((5)*(20000000/4000.0))); ((PORTC) &= ~(1 << (1))); ((PORTD) &= 
      +                          ~(1 << (7)));
   844     0765  0840               	movf	relogio_click@horaU,w
   845     0766  00F7               	movwf	??_relogio_click
   846     0767  0777               	addwf	??_relogio_click,w
   847     0768  3E20               	addlw	(low (relogio_click@segmento| 0))& (0+255)
   848     0769  0084               	movwf	4
   849     076A  1383               	bcf	3,7	;select IRP bank0
   850     076B  0800               	movf	0,w
   851     076C  0088               	movwf	8	;volatile
   852     076D                     l907:
   853     076D  1487               	bsf	7,1	;volatile
   854     076E                     l909:
   855     076E  1788               	bsf	8,7	;volatile
   856     076F                     l911:
   857     076F  3021               	movlw	33
   858     0770  00F8               	movwf	??_relogio_click+1
   859     0771  3076               	movlw	118
   860     0772  00F7               	movwf	??_relogio_click
   861     0773                     u337:
   862     0773  0BF7               	decfsz	??_relogio_click,f
   863     0774  2F73               	goto	u337
   864     0775  0BF8               	decfsz	??_relogio_click+1,f
   865     0776  2F73               	goto	u337
   866     0777  0000               	nop
   867     0778                     l913:
   868     0778  30FD               	movlw	253
   869     0779  00FF               	movwf	btemp+1
   870     077A  087F               	movf	btemp+1,w
   871     077B  1283               	bcf	3,5	;RP0=0, select bank0
   872     077C  1303               	bcf	3,6	;RP1=0, select bank0
   873     077D  0587               	andwf	7,f	;volatile
   874     077E                     l915:
   875     077E  307F               	movlw	127
   876     077F  00FF               	movwf	btemp+1
   877     0780  087F               	movf	btemp+1,w
   878     0781  0588               	andwf	8,f	;volatile
   879     0782                     l917:
   880                           
   881                           ;main.c: 62:     PORTD=segmento[mintD]; ((PORTC) |= (1 << (2))); _delay((unsigned long)(
      +                          (5)*(20000000/4000.0))); ((PORTC) &= ~(1 << (2)));
   882     0782  083E               	movf	relogio_click@mintD,w
   883     0783  00F7               	movwf	??_relogio_click
   884     0784  0777               	addwf	??_relogio_click,w
   885     0785  3E20               	addlw	(low (relogio_click@segmento| 0))& (0+255)
   886     0786  0084               	movwf	4
   887     0787  1383               	bcf	3,7	;select IRP bank0
   888     0788  0800               	movf	0,w
   889     0789  0088               	movwf	8	;volatile
   890     078A                     l919:
   891     078A  1507               	bsf	7,2	;volatile
   892     078B                     l921:
   893     078B  3021               	movlw	33
   894     078C  00F8               	movwf	??_relogio_click+1
   895     078D  3076               	movlw	118
   896     078E  00F7               	movwf	??_relogio_click
   897     078F                     u347:
   898     078F  0BF7               	decfsz	??_relogio_click,f
   899     0790  2F8F               	goto	u347
   900     0791  0BF8               	decfsz	??_relogio_click+1,f
   901     0792  2F8F               	goto	u347
   902     0793  0000               	nop
   903     0794                     l923:
   904     0794  30FB               	movlw	251
   905     0795  00FF               	movwf	btemp+1
   906     0796  087F               	movf	btemp+1,w
   907     0797  1283               	bcf	3,5	;RP0=0, select bank0
   908     0798  1303               	bcf	3,6	;RP1=0, select bank0
   909     0799  0587               	andwf	7,f	;volatile
   910     079A                     l925:
   911                           
   912                           ;main.c: 65:     PORTD=segmento[mintU]; ((PORTC) |= (1 << (3))); ((PORTD) |= (1 << (7)))
      +                          ; _delay((unsigned long)((5)*(20000000/4000.0))); ((PORTC) &= ~(1 << (3))); ((PORTD) &= 
      +                          ~(1 << (7)));
   913     079A  083A               	movf	relogio_click@mintU,w
   914     079B  00F7               	movwf	??_relogio_click
   915     079C  0777               	addwf	??_relogio_click,w
   916     079D  3E20               	addlw	(low (relogio_click@segmento| 0))& (0+255)
   917     079E  0084               	movwf	4
   918     079F  1383               	bcf	3,7	;select IRP bank0
   919     07A0  0800               	movf	0,w
   920     07A1  0088               	movwf	8	;volatile
   921     07A2                     l927:
   922     07A2  1587               	bsf	7,3	;volatile
   923     07A3                     l929:
   924     07A3  1788               	bsf	8,7	;volatile
   925     07A4                     l931:
   926     07A4  3021               	movlw	33
   927     07A5  00F8               	movwf	??_relogio_click+1
   928     07A6  3076               	movlw	118
   929     07A7  00F7               	movwf	??_relogio_click
   930     07A8                     u357:
   931     07A8  0BF7               	decfsz	??_relogio_click,f
   932     07A9  2FA8               	goto	u357
   933     07AA  0BF8               	decfsz	??_relogio_click+1,f
   934     07AB  2FA8               	goto	u357
   935     07AC  0000               	nop
   936     07AD                     l933:
   937     07AD  30F7               	movlw	247
   938     07AE  00FF               	movwf	btemp+1
   939     07AF  087F               	movf	btemp+1,w
   940     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   941     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   942     07B2  0587               	andwf	7,f	;volatile
   943     07B3                     l935:
   944     07B3  307F               	movlw	127
   945     07B4  00FF               	movwf	btemp+1
   946     07B5  087F               	movf	btemp+1,w
   947     07B6  0588               	andwf	8,f	;volatile
   948     07B7                     l937:
   949                           
   950                           ;main.c: 68:     PORTD=segmento[segdD]; ((PORTC) |= (1 << (4))); _delay((unsigned long)(
      +                          (5)*(20000000/4000.0))); ((PORTC) &= ~(1 << (4)));
   951     07B7  0838               	movf	relogio_click@segdD,w
   952     07B8  00F7               	movwf	??_relogio_click
   953     07B9  0777               	addwf	??_relogio_click,w
   954     07BA  3E20               	addlw	(low (relogio_click@segmento| 0))& (0+255)
   955     07BB  0084               	movwf	4
   956     07BC  1383               	bcf	3,7	;select IRP bank0
   957     07BD  0800               	movf	0,w
   958     07BE  0088               	movwf	8	;volatile
   959     07BF                     l939:
   960     07BF  1607               	bsf	7,4	;volatile
   961     07C0                     l941:
   962     07C0  3021               	movlw	33
   963     07C1  00F8               	movwf	??_relogio_click+1
   964     07C2  3076               	movlw	118
   965     07C3  00F7               	movwf	??_relogio_click
   966     07C4                     u367:
   967     07C4  0BF7               	decfsz	??_relogio_click,f
   968     07C5  2FC4               	goto	u367
   969     07C6  0BF8               	decfsz	??_relogio_click+1,f
   970     07C7  2FC4               	goto	u367
   971     07C8  0000               	nop
   972     07C9                     l943:
   973     07C9  30EF               	movlw	239
   974     07CA  00FF               	movwf	btemp+1
   975     07CB  087F               	movf	btemp+1,w
   976     07CC  1283               	bcf	3,5	;RP0=0, select bank0
   977     07CD  1303               	bcf	3,6	;RP1=0, select bank0
   978     07CE  0587               	andwf	7,f	;volatile
   979     07CF                     l945:
   980                           
   981                           ;main.c: 71:     PORTD=segmento[segdU]; ((PORTC) |= (1 << (5))); _delay((unsigned long)(
      +                          (5)*(20000000/4000.0))); ((PORTC) &= ~(1 << (5)));
   982     07CF  0834               	movf	relogio_click@segdU,w
   983     07D0  00F7               	movwf	??_relogio_click
   984     07D1  0777               	addwf	??_relogio_click,w
   985     07D2  3E20               	addlw	(low (relogio_click@segmento| 0))& (0+255)
   986     07D3  0084               	movwf	4
   987     07D4  1383               	bcf	3,7	;select IRP bank0
   988     07D5  0800               	movf	0,w
   989     07D6  0088               	movwf	8	;volatile
   990     07D7                     l947:
   991     07D7  1687               	bsf	7,5	;volatile
   992     07D8                     l949:
   993     07D8  3021               	movlw	33
   994     07D9  00F8               	movwf	??_relogio_click+1
   995     07DA  3076               	movlw	118
   996     07DB  00F7               	movwf	??_relogio_click
   997     07DC                     u377:
   998     07DC  0BF7               	decfsz	??_relogio_click,f
   999     07DD  2FDC               	goto	u377
  1000     07DE  0BF8               	decfsz	??_relogio_click+1,f
  1001     07DF  2FDC               	goto	u377
  1002     07E0  0000               	nop
  1003     07E1                     l951:
  1004     07E1  30DF               	movlw	223
  1005     07E2  00FF               	movwf	btemp+1
  1006     07E3  087F               	movf	btemp+1,w
  1007     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1008     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1009     07E6  0587               	andwf	7,f	;volatile
  1010     07E7                     l21:
  1011     07E7  0008               	return
  1012     07E8                     __end_of_relogio_click:
  1013                           
  1014                           	psect	text2
  1015     05AD                     __ptext2:	
  1016 ;; *************** function ___lwmod *****************
  1017 ;; Defined at:
  1018 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  divisor         2    0[COMMON] unsigned int 
  1021 ;;  dividend        2    2[COMMON] unsigned int 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  counter         1    4[COMMON] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  2    0[COMMON] unsigned int 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, btemp+1
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         4       0       0       0       0
  1034 ;;      Locals:         1       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         5       0       0       0       0
  1037 ;;Total ram usage:        5 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_relogio_click
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046     05AD                     ___lwmod:	
  1047                           ;psect for function ___lwmod
  1048                           
  1049     05AD                     l709:	
  1050                           ;incstack = 0
  1051                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1052                           
  1053     05AD  0870               	movf	___lwmod@divisor,w
  1054     05AE  0471               	iorwf	___lwmod@divisor+1,w
  1055     05AF  1903               	btfsc	3,2
  1056     05B0  2DB2               	goto	u91
  1057     05B1  2DB3               	goto	u90
  1058     05B2                     u91:
  1059     05B2  2DE2               	goto	l727
  1060     05B3                     u90:
  1061     05B3                     l711:
  1062     05B3  01F4               	clrf	___lwmod@counter
  1063     05B4  0AF4               	incf	___lwmod@counter,f
  1064     05B5  2DC1               	goto	l717
  1065     05B6                     l713:
  1066     05B6  3001               	movlw	1
  1067     05B7                     u105:
  1068     05B7  1003               	clrc
  1069     05B8  0DF0               	rlf	___lwmod@divisor,f
  1070     05B9  0DF1               	rlf	___lwmod@divisor+1,f
  1071     05BA  3EFF               	addlw	-1
  1072     05BB  1D03               	skipz
  1073     05BC  2DB7               	goto	u105
  1074     05BD                     l715:
  1075     05BD  3001               	movlw	1
  1076     05BE  00FF               	movwf	btemp+1
  1077     05BF  087F               	movf	btemp+1,w
  1078     05C0  07F4               	addwf	___lwmod@counter,f
  1079     05C1                     l717:
  1080     05C1  1FF1               	btfss	___lwmod@divisor+1,7
  1081     05C2  2DC4               	goto	u111
  1082     05C3  2DC5               	goto	u110
  1083     05C4                     u111:
  1084     05C4  2DB6               	goto	l713
  1085     05C5                     u110:
  1086     05C5                     l719:
  1087     05C5  0871               	movf	___lwmod@divisor+1,w
  1088     05C6  0273               	subwf	___lwmod@dividend+1,w
  1089     05C7  1D03               	skipz
  1090     05C8  2DCB               	goto	u125
  1091     05C9  0870               	movf	___lwmod@divisor,w
  1092     05CA  0272               	subwf	___lwmod@dividend,w
  1093     05CB                     u125:
  1094     05CB  1C03               	skipc
  1095     05CC  2DCE               	goto	u121
  1096     05CD  2DCF               	goto	u120
  1097     05CE                     u121:
  1098     05CE  2DD5               	goto	l723
  1099     05CF                     u120:
  1100     05CF                     l721:
  1101     05CF  0870               	movf	___lwmod@divisor,w
  1102     05D0  02F2               	subwf	___lwmod@dividend,f
  1103     05D1  0871               	movf	___lwmod@divisor+1,w
  1104     05D2  1C03               	skipc
  1105     05D3  03F3               	decf	___lwmod@dividend+1,f
  1106     05D4  02F3               	subwf	___lwmod@dividend+1,f
  1107     05D5                     l723:
  1108     05D5  3001               	movlw	1
  1109     05D6                     u135:
  1110     05D6  1003               	clrc
  1111     05D7  0CF1               	rrf	___lwmod@divisor+1,f
  1112     05D8  0CF0               	rrf	___lwmod@divisor,f
  1113     05D9  3EFF               	addlw	-1
  1114     05DA  1D03               	skipz
  1115     05DB  2DD6               	goto	u135
  1116     05DC                     l725:
  1117     05DC  3001               	movlw	1
  1118     05DD  02F4               	subwf	___lwmod@counter,f
  1119     05DE  1D03               	btfss	3,2
  1120     05DF  2DE1               	goto	u141
  1121     05E0  2DE2               	goto	u140
  1122     05E1                     u141:
  1123     05E1  2DC5               	goto	l719
  1124     05E2                     u140:
  1125     05E2                     l727:
  1126     05E2  0873               	movf	___lwmod@dividend+1,w
  1127     05E3  00F1               	movwf	?___lwmod+1
  1128     05E4  0872               	movf	___lwmod@dividend,w
  1129     05E5  00F0               	movwf	?___lwmod
  1130     05E6                     l415:
  1131     05E6  0008               	return
  1132     05E7                     __end_of___lwmod:
  1133                           
  1134                           	psect	text3
  1135     05E7                     __ptext3:	
  1136 ;; *************** function ___lwdiv *****************
  1137 ;; Defined at:
  1138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  divisor         2    0[COMMON] unsigned int 
  1141 ;;  dividend        2    2[COMMON] unsigned int 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  quotient        2    4[COMMON] unsigned int 
  1144 ;;  counter         1    6[COMMON] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2    0[COMMON] unsigned int 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, btemp+1
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         4       0       0       0       0
  1155 ;;      Locals:         3       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         7       0       0       0       0
  1158 ;;Total ram usage:        7 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_relogio_click
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167     05E7                     ___lwdiv:	
  1168                           ;psect for function ___lwdiv
  1169                           
  1170     05E7                     l843:	
  1171                           ;incstack = 0
  1172                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1173                           
  1174     05E7  01F4               	clrf	___lwdiv@quotient
  1175     05E8  01F5               	clrf	___lwdiv@quotient+1
  1176     05E9                     l845:
  1177     05E9  0870               	movf	___lwdiv@divisor,w
  1178     05EA  0471               	iorwf	___lwdiv@divisor+1,w
  1179     05EB  1903               	btfsc	3,2
  1180     05EC  2DEE               	goto	u201
  1181     05ED  2DEF               	goto	u200
  1182     05EE                     u201:
  1183     05EE  2E26               	goto	l865
  1184     05EF                     u200:
  1185     05EF                     l847:
  1186     05EF  01F6               	clrf	___lwdiv@counter
  1187     05F0  0AF6               	incf	___lwdiv@counter,f
  1188     05F1  2DFD               	goto	l853
  1189     05F2                     l849:
  1190     05F2  3001               	movlw	1
  1191     05F3                     u215:
  1192     05F3  1003               	clrc
  1193     05F4  0DF0               	rlf	___lwdiv@divisor,f
  1194     05F5  0DF1               	rlf	___lwdiv@divisor+1,f
  1195     05F6  3EFF               	addlw	-1
  1196     05F7  1D03               	skipz
  1197     05F8  2DF3               	goto	u215
  1198     05F9                     l851:
  1199     05F9  3001               	movlw	1
  1200     05FA  00FF               	movwf	btemp+1
  1201     05FB  087F               	movf	btemp+1,w
  1202     05FC  07F6               	addwf	___lwdiv@counter,f
  1203     05FD                     l853:
  1204     05FD  1FF1               	btfss	___lwdiv@divisor+1,7
  1205     05FE  2E00               	goto	u221
  1206     05FF  2E01               	goto	u220
  1207     0600                     u221:
  1208     0600  2DF2               	goto	l849
  1209     0601                     u220:
  1210     0601                     l855:
  1211     0601  3001               	movlw	1
  1212     0602                     u235:
  1213     0602  1003               	clrc
  1214     0603  0DF4               	rlf	___lwdiv@quotient,f
  1215     0604  0DF5               	rlf	___lwdiv@quotient+1,f
  1216     0605  3EFF               	addlw	-1
  1217     0606  1D03               	skipz
  1218     0607  2E02               	goto	u235
  1219     0608  0871               	movf	___lwdiv@divisor+1,w
  1220     0609  0273               	subwf	___lwdiv@dividend+1,w
  1221     060A  1D03               	skipz
  1222     060B  2E0E               	goto	u245
  1223     060C  0870               	movf	___lwdiv@divisor,w
  1224     060D  0272               	subwf	___lwdiv@dividend,w
  1225     060E                     u245:
  1226     060E  1C03               	skipc
  1227     060F  2E11               	goto	u241
  1228     0610  2E12               	goto	u240
  1229     0611                     u241:
  1230     0611  2E19               	goto	l861
  1231     0612                     u240:
  1232     0612                     l857:
  1233     0612  0870               	movf	___lwdiv@divisor,w
  1234     0613  02F2               	subwf	___lwdiv@dividend,f
  1235     0614  0871               	movf	___lwdiv@divisor+1,w
  1236     0615  1C03               	skipc
  1237     0616  03F3               	decf	___lwdiv@dividend+1,f
  1238     0617  02F3               	subwf	___lwdiv@dividend+1,f
  1239     0618                     l859:
  1240     0618  1474               	bsf	___lwdiv@quotient,0
  1241     0619                     l861:
  1242     0619  3001               	movlw	1
  1243     061A                     u255:
  1244     061A  1003               	clrc
  1245     061B  0CF1               	rrf	___lwdiv@divisor+1,f
  1246     061C  0CF0               	rrf	___lwdiv@divisor,f
  1247     061D  3EFF               	addlw	-1
  1248     061E  1D03               	skipz
  1249     061F  2E1A               	goto	u255
  1250     0620                     l863:
  1251     0620  3001               	movlw	1
  1252     0621  02F6               	subwf	___lwdiv@counter,f
  1253     0622  1D03               	btfss	3,2
  1254     0623  2E25               	goto	u261
  1255     0624  2E26               	goto	u260
  1256     0625                     u261:
  1257     0625  2E01               	goto	l855
  1258     0626                     u260:
  1259     0626                     l865:
  1260     0626  0875               	movf	___lwdiv@quotient+1,w
  1261     0627  00F1               	movwf	?___lwdiv+1
  1262     0628  0874               	movf	___lwdiv@quotient,w
  1263     0629  00F0               	movwf	?___lwdiv
  1264     062A                     l405:
  1265     062A  0008               	return
  1266     062B                     __end_of___lwdiv:
  1267     007E                     btemp	set	126	;btemp
  1268     007E                     wtemp0	set	126
  1269                           
  1270                           	psect	config
  1271                           
  1272                           ;Config register CONFIG @ 0x2007
  1273                           ;	Oscillator Selection bits
  1274                           ;	FOSC = XT, XT oscillator
  1275                           ;	Watchdog Timer Enable bit
  1276                           ;	WDTE = OFF, WDT disabled
  1277                           ;	Power-up Timer Enable bit
  1278                           ;	PWRTE = ON, PWRT enabled
  1279                           ;	Brown-out Reset Enable bit
  1280                           ;	BOREN = ON, BOR enabled
  1281                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1282                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1283                           ;	Data EEPROM Memory Code Protection bit
  1284                           ;	CPD = OFF, Data EEPROM code protection off
  1285                           ;	Flash Program Memory Write Enable bits
  1286                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1287                           ;	In-Circuit Debugger Mode bit
  1288                           ;	DEBUG = 0x1, unprogrammed default
  1289                           ;	Flash Program Memory Code Protection bit
  1290                           ;	CP = OFF, Code protection off
  1291     2007                     	org	8199
  1292     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     38      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_relogio_click
    _relogio_click->___lwdiv

Critical Paths under _main in BANK0

    _main->_relogio_click

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1199
                                             11 COMMON     2     2      0
                      _relogio_click
 ---------------------------------------------------------------------------------
 (1) _relogio_click                                       42    42      0    1159
                                              7 COMMON     4     4      0
                                              0 BANK0     38    38      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     621
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4      25
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _relogio_click
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 23 22:59:22 2024

                      pc 0002                       l21 07E7                       l28 0677  
                     u90 05B3                       u91 05B2                       fsr 0004  
                    l405 062A                      l415 05E6                      l711 05B3  
                    l721 05CF                      l713 05B6                      l723 05D5  
                    l715 05BD                      l725 05DC                      l717 05C1  
                    l709 05AD                      l901 0756                      l719 05C5  
                    l727 05E2                      l911 076F                      l903 075F  
                    l921 078B                      l913 0778                      l905 0765  
                    l851 05F9                      l843 05E7                      l931 07A4  
                    l923 0794                      l915 077E                      l907 076D  
                    l861 0619                      l853 05FD                      l845 05E9  
                    l941 07C0                      l933 07AD                      l925 079A  
                    l917 0782                      l909 076E                      l863 0620  
                    l855 0601                      l847 05EF                      l951 07E1  
                    l943 07C9                      l935 07B3                      l927 07A2  
                    l919 078A                      l871 0696                      l857 0612  
                    l849 05F2                      l865 0626                      l945 07CF  
                    l937 07B7                      l929 07A3                      l881 06B5  
                    l873 0699                      l961 0647                      l953 062B  
                    l859 0618                      l947 07D7                      l939 07BF  
                    l891 0714                      l883 06C8                      l875 069C  
                    l971 0663                      l963 0649                      l955 062D  
                    l949 07D8                      l893 0727                      l885 06DB  
                    l877 069F                      l869 0681                      l973 0669  
                    l965 0652                      l957 0632                      l895 073A  
                    l887 06EE                      l879 06A2                      l975 066B  
                    l967 0658                      l959 063F                      l897 074D  
                    l889 0701                      l977 0674                      l969 065A  
                    l899 0755                      l979 0677                      u110 05C5  
                    u111 05C4                      u200 05EF                      u120 05CF  
                    u201 05EE                      u121 05CE                      u105 05B7  
                    u220 0601                      u140 05E2                      u300 0663  
                    u221 0600                      u141 05E1                      u125 05CB  
                    u301 0662                      u310 0674                      u215 05F3  
                    u135 05D6                      u311 0673                      u240 0612  
                    u241 0611                      u235 0602                      u260 0626  
                    u261 0625                      u245 060E                      u270 0689  
                    u255 061A                      u327 075A                      u280 063F  
                    u337 0773                      u281 063E                      u290 0652  
                    u347 078F                      u291 0651                      u357 07A8  
                    u285 063B                      u367 07C4                      u377 07DC  
                    fsr0 0004                      indf 0000                     _main 062B  
                   _hora 005A                     _mint 005C                     _segd 005E  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___lwdiv 062B          __end_of___lwmod 05E7                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E8             __end_of_main 0681                   ??_main 007B  
  __end_of_relogio_click 07E8                ??___lwdiv 0074                ??___lwmod 0074  
  relogio_click@segmento 0020  __end_of__initialization 07FC       relogio_click@F1019 0046  
         __pcstackCOMMON 0070             __pidataBANK0 0599       relogio_click@horaD 0044  
     relogio_click@horaU 0040       relogio_click@mintD 003E       relogio_click@segdD 0038  
     relogio_click@mintU 003A       relogio_click@segdU 0034               __pbssBANK0 005A  
             __pmaintext 062B                  ___lwdiv 05E7                  ___lwmod 05AD  
                __ptext1 0681                  __ptext2 05AD                  __ptext3 05E7  
   end_of_initialization 07FC      relogio_click@horaUA 0042      relogio_click@mintUA 003C  
    relogio_click@segdUA 0036      start_initialization 07E8               init_fetch0 0586  
            __pdataBANK0 0046                ___latbits 0002            __pcstackBANK0 0020  
          _relogio_click 0681         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0070         ___lwdiv@quotient 0074           ?_relogio_click 0070  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076          ??_relogio_click 0077  
               main@flag 007B                 init_ram0 058A         ___lwmod@dividend 0072  
        ___lwmod@divisor 0070          ___lwmod@counter 0074  
